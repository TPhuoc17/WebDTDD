#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DACN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBDACN")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertCTDONHANG(CTDONHANG instance);
    partial void UpdateCTDONHANG(CTDONHANG instance);
    partial void DeleteCTDONHANG(CTDONHANG instance);
    partial void InsertDANHGIA(DANHGIA instance);
    partial void UpdateDANHGIA(DANHGIA instance);
    partial void DeleteDANHGIA(DANHGIA instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertLIENHE(LIENHE instance);
    partial void UpdateLIENHE(LIENHE instance);
    partial void DeleteLIENHE(LIENHE instance);
    partial void InsertNSX(NSX instance);
    partial void UpdateNSX(NSX instance);
    partial void DeleteNSX(NSX instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBDACNConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this.GetTable<CTDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DANHGIA> DANHGIAs
		{
			get
			{
				return this.GetTable<DANHGIA>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<LIENHE> LIENHEs
		{
			get
			{
				return this.GetTable<LIENHE>();
			}
		}
		
		public System.Data.Linq.Table<NSX> NSXes
		{
			get
			{
				return this.GetTable<NSX>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBanner;
		
		private string _HinhBanner;
		
		private int _IdTK;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBannerChanging(int value);
    partial void OnMaBannerChanged();
    partial void OnHinhBannerChanging(string value);
    partial void OnHinhBannerChanged();
    partial void OnIdTKChanging(int value);
    partial void OnIdTKChanged();
    #endregion
		
		public Banner()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanner", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBanner
		{
			get
			{
				return this._MaBanner;
			}
			set
			{
				if ((this._MaBanner != value))
				{
					this.OnMaBannerChanging(value);
					this.SendPropertyChanging();
					this._MaBanner = value;
					this.SendPropertyChanged("MaBanner");
					this.OnMaBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhBanner", DbType="VarChar(250)")]
		public string HinhBanner
		{
			get
			{
				return this._HinhBanner;
			}
			set
			{
				if ((this._HinhBanner != value))
				{
					this.OnHinhBannerChanging(value);
					this.SendPropertyChanging();
					this._HinhBanner = value;
					this.SendPropertyChanged("HinhBanner");
					this.OnHinhBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTK", DbType="Int NOT NULL")]
		public int IdTK
		{
			get
			{
				return this._IdTK;
			}
			set
			{
				if ((this._IdTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTKChanging(value);
					this.SendPropertyChanging();
					this._IdTK = value;
					this.SendPropertyChanged("IdTK");
					this.OnIdTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_Banner", Storage="_TAIKHOAN", ThisKey="IdTK", OtherKey="IdTK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._IdTK = value.IdTK;
					}
					else
					{
						this._IdTK = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private System.Nullable<bool> _TrangThai;
		
		private int _IdTK;
		
		private int _IdSP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnIdTKChanging(int value);
    partial void OnIdTKChanged();
    partial void OnIdSPChanging(int value);
    partial void OnIdSPChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(250)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTK", DbType="Int NOT NULL")]
		public int IdTK
		{
			get
			{
				return this._IdTK;
			}
			set
			{
				if ((this._IdTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTKChanging(value);
					this.SendPropertyChanging();
					this._IdTK = value;
					this.SendPropertyChanged("IdTK");
					this.OnIdTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSP", DbType="Int NOT NULL")]
		public int IdSP
		{
			get
			{
				return this._IdSP;
			}
			set
			{
				if ((this._IdSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSPChanging(value);
					this.SendPropertyChanging();
					this._IdSP = value;
					this.SendPropertyChanged("IdSP");
					this.OnIdSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_SANPHAM", ThisKey="IdSP", OtherKey="IdSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._IdSP = value.IdSP;
					}
					else
					{
						this._IdSP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_TAIKHOAN", ThisKey="IdTK", OtherKey="IdTK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._IdTK = value.IdTK;
					}
					else
					{
						this._IdTK = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDONHANG")]
	public partial class CTDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _IdSP;
		
		private System.Nullable<int> _SLMua;
		
		private System.Nullable<decimal> _Gia;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnIdSPChanging(int value);
    partial void OnIdSPChanged();
    partial void OnSLMuaChanging(System.Nullable<int> value);
    partial void OnSLMuaChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    #endregion
		
		public CTDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSP
		{
			get
			{
				return this._IdSP;
			}
			set
			{
				if ((this._IdSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSPChanging(value);
					this.SendPropertyChanging();
					this._IdSP = value;
					this.SendPropertyChanged("IdSP");
					this.OnIdSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLMua", DbType="Int")]
		public System.Nullable<int> SLMua
		{
			get
			{
				return this._SLMua;
			}
			set
			{
				if ((this._SLMua != value))
				{
					this.OnSLMuaChanging(value);
					this.SendPropertyChanging();
					this._SLMua = value;
					this.SendPropertyChanged("SLMua");
					this.OnSLMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_DONHANG", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_SANPHAM", ThisKey="IdSP", OtherKey="IdSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._IdSP = value.IdSP;
					}
					else
					{
						this._IdSP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHGIA")]
	public partial class DANHGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDG;
		
		private string _NoiDung;
		
		private System.Nullable<double> _SoSao;
		
		private System.Nullable<System.DateTime> _NgayDG;
		
		private System.Nullable<bool> _TrangThai;
		
		private int _MaDH;
		
		private EntityRef<DONHANG> _DONHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDGChanging(int value);
    partial void OnMaDGChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnSoSaoChanging(System.Nullable<double> value);
    partial void OnSoSaoChanged();
    partial void OnNgayDGChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDGChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    #endregion
		
		public DANHGIA()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(250)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Float")]
		public System.Nullable<double> SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDG
		{
			get
			{
				return this._NgayDG;
			}
			set
			{
				if ((this._NgayDG != value))
				{
					this.OnNgayDGChanging(value);
					this.SendPropertyChanging();
					this._NgayDG = value;
					this.SendPropertyChanged("NgayDG");
					this.OnNgayDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL")]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_DANHGIA", Storage="_DONHANG", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.DANHGIAs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.DANHGIAs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private System.Nullable<System.DateTime> _NgayGiaoHang;
		
		private string _DiaChiGiaoHang;
		
		private System.Nullable<decimal> _TongTien;
		
		private System.Nullable<bool> _TrangThai;
		
		private int _IdTK;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntitySet<DANHGIA> _DANHGIAs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoHangChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnIdTKChanging(int value);
    partial void OnIdTKChanged();
    #endregion
		
		public DONHANG()
		{
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._DANHGIAs = new EntitySet<DANHGIA>(new Action<DANHGIA>(this.attach_DANHGIAs), new Action<DANHGIA>(this.detach_DANHGIAs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(50)")]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTK", DbType="Int NOT NULL")]
		public int IdTK
		{
			get
			{
				return this._IdTK;
			}
			set
			{
				if ((this._IdTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTKChanging(value);
					this.SendPropertyChanging();
					this._IdTK = value;
					this.SendPropertyChanged("IdTK");
					this.OnIdTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_CTDONHANGs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_DANHGIA", Storage="_DANHGIAs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<DANHGIA> DANHGIAs
		{
			get
			{
				return this._DANHGIAs;
			}
			set
			{
				this._DANHGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_DONHANG", Storage="_TAIKHOAN", ThisKey="IdTK", OtherKey="IdTK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._IdTK = value.IdTK;
					}
					else
					{
						this._IdTK = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
		
		private void attach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIENHE")]
	public partial class LIENHE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLH;
		
		private string _HoTen;
		
		private string _EmailLH;
		
		private string _YeuCau;
		
		private System.Nullable<System.DateTime> _NgayLH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(int value);
    partial void OnMaLHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailLHChanging(string value);
    partial void OnEmailLHChanged();
    partial void OnYeuCauChanging(string value);
    partial void OnYeuCauChanged();
    partial void OnNgayLHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLHChanged();
    #endregion
		
		public LIENHE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(250)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailLH", DbType="VarChar(50)")]
		public string EmailLH
		{
			get
			{
				return this._EmailLH;
			}
			set
			{
				if ((this._EmailLH != value))
				{
					this.OnEmailLHChanging(value);
					this.SendPropertyChanging();
					this._EmailLH = value;
					this.SendPropertyChanged("EmailLH");
					this.OnEmailLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YeuCau", DbType="NVarChar(200)")]
		public string YeuCau
		{
			get
			{
				return this._YeuCau;
			}
			set
			{
				if ((this._YeuCau != value))
				{
					this.OnYeuCauChanging(value);
					this.SendPropertyChanging();
					this._YeuCau = value;
					this.SendPropertyChanged("YeuCau");
					this.OnYeuCauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLH
		{
			get
			{
				return this._NgayLH;
			}
			set
			{
				if ((this._NgayLH != value))
				{
					this.OnNgayLHChanging(value);
					this.SendPropertyChanging();
					this._NgayLH = value;
					this.SendPropertyChanged("NgayLH");
					this.OnNgayLHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NSX")]
	public partial class NSX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNSX;
		
		private string _TenNSX;
		
		private string _Logo;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    partial void OnTenNSXChanging(string value);
    partial void OnTenNSXChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public NSX()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNSX", DbType="NVarChar(20)")]
		public string TenNSX
		{
			get
			{
				return this._TenNSX;
			}
			set
			{
				if ((this._TenNSX != value))
				{
					this.OnTenNSXChanging(value);
					this.SendPropertyChanging();
					this._TenNSX = value;
					this.SendPropertyChanged("TenNSX");
					this.OnTenNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(250)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NSX_SANPHAM", Storage="_SANPHAMs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NSX = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NSX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSP;
		
		private string _TenSP;
		
		private System.Nullable<decimal> _GiaSP;
		
		private string _ManHinh;
		
		private string _ViXuLy;
		
		private System.Nullable<int> _RAM;
		
		private string _HinhSP;
		
		private System.Nullable<int> _SLTon;
		
		private string _MoTaSP;
		
		private string _BoNho;
		
		private System.Nullable<bool> _TrangThai;
		
		private int _MaNSX;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntityRef<NSX> _NSX;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSPChanging(int value);
    partial void OnIdSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaSPChanging(System.Nullable<decimal> value);
    partial void OnGiaSPChanged();
    partial void OnManHinhChanging(string value);
    partial void OnManHinhChanged();
    partial void OnViXuLyChanging(string value);
    partial void OnViXuLyChanged();
    partial void OnRAMChanging(System.Nullable<int> value);
    partial void OnRAMChanged();
    partial void OnHinhSPChanging(string value);
    partial void OnHinhSPChanged();
    partial void OnSLTonChanging(System.Nullable<int> value);
    partial void OnSLTonChanged();
    partial void OnMoTaSPChanging(string value);
    partial void OnMoTaSPChanged();
    partial void OnBoNhoChanging(string value);
    partial void OnBoNhoChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    #endregion
		
		public SANPHAM()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._NSX = default(EntityRef<NSX>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSP
		{
			get
			{
				return this._IdSP;
			}
			set
			{
				if ((this._IdSP != value))
				{
					this.OnIdSPChanging(value);
					this.SendPropertyChanging();
					this._IdSP = value;
					this.SendPropertyChanged("IdSP");
					this.OnIdSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManHinh", DbType="NVarChar(50)")]
		public string ManHinh
		{
			get
			{
				return this._ManHinh;
			}
			set
			{
				if ((this._ManHinh != value))
				{
					this.OnManHinhChanging(value);
					this.SendPropertyChanging();
					this._ManHinh = value;
					this.SendPropertyChanged("ManHinh");
					this.OnManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViXuLy", DbType="NVarChar(50)")]
		public string ViXuLy
		{
			get
			{
				return this._ViXuLy;
			}
			set
			{
				if ((this._ViXuLy != value))
				{
					this.OnViXuLyChanging(value);
					this.SendPropertyChanging();
					this._ViXuLy = value;
					this.SendPropertyChanged("ViXuLy");
					this.OnViXuLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM", DbType="Int")]
		public System.Nullable<int> RAM
		{
			get
			{
				return this._RAM;
			}
			set
			{
				if ((this._RAM != value))
				{
					this.OnRAMChanging(value);
					this.SendPropertyChanging();
					this._RAM = value;
					this.SendPropertyChanged("RAM");
					this.OnRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhSP", DbType="VarChar(250)")]
		public string HinhSP
		{
			get
			{
				return this._HinhSP;
			}
			set
			{
				if ((this._HinhSP != value))
				{
					this.OnHinhSPChanging(value);
					this.SendPropertyChanging();
					this._HinhSP = value;
					this.SendPropertyChanged("HinhSP");
					this.OnHinhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTon", DbType="Int")]
		public System.Nullable<int> SLTon
		{
			get
			{
				return this._SLTon;
			}
			set
			{
				if ((this._SLTon != value))
				{
					this.OnSLTonChanging(value);
					this.SendPropertyChanging();
					this._SLTon = value;
					this.SendPropertyChanged("SLTon");
					this.OnSLTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaSP", DbType="NVarChar(MAX)")]
		public string MoTaSP
		{
			get
			{
				return this._MoTaSP;
			}
			set
			{
				if ((this._MoTaSP != value))
				{
					this.OnMoTaSPChanging(value);
					this.SendPropertyChanging();
					this._MoTaSP = value;
					this.SendPropertyChanged("MoTaSP");
					this.OnMoTaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoNho", DbType="NVarChar(10)")]
		public string BoNho
		{
			get
			{
				return this._BoNho;
			}
			set
			{
				if ((this._BoNho != value))
				{
					this.OnBoNhoChanging(value);
					this.SendPropertyChanging();
					this._BoNho = value;
					this.SendPropertyChanged("BoNho");
					this.OnBoNhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL")]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NSX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_BINHLUANs", ThisKey="IdSP", OtherKey="IdSP")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_CTDONHANGs", ThisKey="IdSP", OtherKey="IdSP")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NSX_SANPHAM", Storage="_NSX", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NSX NSX
		{
			get
			{
				return this._NSX.Entity;
			}
			set
			{
				NSX previousValue = this._NSX.Entity;
				if (((previousValue != value) 
							|| (this._NSX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NSX.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NSX.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(int);
					}
					this.SendPropertyChanged("NSX");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTK;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private string _TenNguoiDung;
		
		private string _Email;
		
		private string _SDT;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<bool> _QuyenDN;
		
		private EntitySet<Banner> _Banners;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTKChanging(int value);
    partial void OnIdTKChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTenNguoiDungChanging(string value);
    partial void OnTenNguoiDungChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnQuyenDNChanging(System.Nullable<bool> value);
    partial void OnQuyenDNChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._Banners = new EntitySet<Banner>(new Action<Banner>(this.attach_Banners), new Action<Banner>(this.detach_Banners));
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTK
		{
			get
			{
				return this._IdTK;
			}
			set
			{
				if ((this._IdTK != value))
				{
					this.OnIdTKChanging(value);
					this.SendPropertyChanging();
					this._IdTK = value;
					this.SendPropertyChanged("IdTK");
					this.OnIdTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(50)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(130)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiDung", DbType="NVarChar(50)")]
		public string TenNguoiDung
		{
			get
			{
				return this._TenNguoiDung;
			}
			set
			{
				if ((this._TenNguoiDung != value))
				{
					this.OnTenNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiDung = value;
					this.SendPropertyChanged("TenNguoiDung");
					this.OnTenNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyenDN", DbType="Bit")]
		public System.Nullable<bool> QuyenDN
		{
			get
			{
				return this._QuyenDN;
			}
			set
			{
				if ((this._QuyenDN != value))
				{
					this.OnQuyenDNChanging(value);
					this.SendPropertyChanging();
					this._QuyenDN = value;
					this.SendPropertyChanged("QuyenDN");
					this.OnQuyenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_Banner", Storage="_Banners", ThisKey="IdTK", OtherKey="IdTK")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_BINHLUANs", ThisKey="IdTK", OtherKey="IdTK")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_DONHANG", Storage="_DONHANGs", ThisKey="IdTK", OtherKey="IdTK")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTT;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private string _HinhTT;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _Truycap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTChanging(int value);
    partial void OnMaTTChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnHinhTTChanging(string value);
    partial void OnHinhTTChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnTruycapChanging(string value);
    partial void OnTruycapChanged();
    #endregion
		
		public TINTUC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(250)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhTT", DbType="VarChar(250)")]
		public string HinhTT
		{
			get
			{
				return this._HinhTT;
			}
			set
			{
				if ((this._HinhTT != value))
				{
					this.OnHinhTTChanging(value);
					this.SendPropertyChanging();
					this._HinhTT = value;
					this.SendPropertyChanged("HinhTT");
					this.OnHinhTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Truycap", DbType="NVarChar(MAX)")]
		public string Truycap
		{
			get
			{
				return this._Truycap;
			}
			set
			{
				if ((this._Truycap != value))
				{
					this.OnTruycapChanging(value);
					this.SendPropertyChanging();
					this._Truycap = value;
					this.SendPropertyChanged("Truycap");
					this.OnTruycapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
